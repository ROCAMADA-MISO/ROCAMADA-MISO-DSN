version: "3.4"

x-var: &parameters
  JWT_SECRET: thisisasecret
  DB_URI: postgresql://postgres@cct-db:5432/cct
  DB_USERS_URI: postgresql://postgres@users-db:5432/users
services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes: 
      - ./redis_data:/data
  cct-db:
    image: postgres:14.5
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: cct
      POSTGRES_HOST_AUTH_METHOD: trust
  ms-template:
    volumes:
        - ./ms-template/:/mnt/
    build: ./ms-template
    working_dir: /backend/
    command: bash -c "chmod +x ./wait-for-it.sh && ./wait-for-it.sh cct-db:5432 && gunicorn -b 0.0.0.0:5000 'app:return_app()'"
    ports:
      - "5000:5000"
    restart: on-failure
    environment:
      <<: *parameters
    depends_on:
      - cct-db
  users-db:
    image: postgres:14.5
    ports:
      - "5433:5432"
    volumes:
      - ./db_users_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: users
      POSTGRES_HOST_AUTH_METHOD: trust
  ms-auth:
    volumes:
        - ./ms-auth/:/mnt/
    build: ./ms-auth
    working_dir: /backend/
    command: bash -c "chmod +x ./wait-for-it.sh && ./wait-for-it.sh users-db:5432 && gunicorn -b 0.0.0.0:5000 'app:return_app()'"
    ports:
      - "5001:5000"
    restart: on-failure
    environment:
      <<: *parameters
    depends_on:
      - users-db
  nginx:
    image: nginx:latest
    ports:
      - 4000:443
    volumes:
        - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
        - ./nginx/localhost.crt:/etc/ssl/certs/localhost.crt
        - ./nginx/localhost.key:/etc/ssl/private/localhost.key
    restart: on-failure
    depends_on:
        - ms-template
        - ms-auth